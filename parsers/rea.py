import asyncio

import aiohttp

from bs4 import BeautifulSoup

places = {('Бизнес-информатика - Высшая школа кибертехнологий, математики и статистики', 0): 21,
          ('Бизнес-информатика - Высшая школа кибертехнологий, математики и статистики', 1): 35,
          ('Гостиничное дело - Высшая школа менеджмента', 0): 15,
          ('Гостиничное дело - Высшая школа менеджмента', 1): 100,
          ('Государственное и муниципальное управление - Высшая школа права', 0): 9,
          ('Государственное и муниципальное управление - Высшая школа права', 1): 55,
          ('Государственное и муниципальное управление - Факультет бизнеса "КАПИТАНЫ"', 0): 6,
          ('Государственное и муниципальное управление - Факультет бизнеса "КАПИТАНЫ"', 1): 80,
          ('Дизайн - Высшая школа экономики и бизнеса', 0): 15, ('Дизайн - Высшая школа экономики и бизнеса', 1): 21,
          ('Журналистика - Институт "Первая Академия медиа"', 0): 7,
          ('Журналистика - Институт "Первая Академия медиа"', 1): 50,
          ('Инноватика - Высшая школа менеджмента', 1): 15,
          ('Информатика и вычислительная техника - Высшая школа кибертехнологий, математики и статистики', 1): 30,
          ('Информатика и вычислительная техника - Высшая школа кибертехнологий, математики и статистики', 0): 13,
          ('Информационная безопасность - Высшая школа кибертехнологий, математики и статистики', 1): 70,
          ('Информационная безопасность - Высшая школа кибертехнологий, математики и статистики', 0): 13,
          ('Информационные системы и технологии - Высшая школа кибертехнологий, математики и статистики', 0): 13,
          ('Информационные системы и технологии - Высшая школа кибертехнологий, математики и статистики', 1): 20,
          (
              'Математическое обеспечение и администрирование информационных систем - Высшая школа кибертехнологий, математики и статистики',
              1
          ): 30,
          (
              'Математическое обеспечение и администрирование информационных систем - Высшая школа кибертехнологий, математики и статистики',
              0
          ): 30,
          ('Медиакоммуникации - Институт "Первая Академия медиа"', 0): 6,
          ('Медиакоммуникации - Институт "Первая Академия медиа"', 1): 50,
          ('Международные отношения - Высшая школа экономики и бизнеса', 0): 5,
          ('Международные отношения - Высшая школа экономики и бизнеса', 1): 30,
          ('Менеджмент - Высшая инженерная школа "Новые материалы и технологии"', 1): 10,
          ('Менеджмент - Высшая инженерная школа "Новые материалы и технологии"', 0): 11,
          ('Менеджмент - Высшая школа менеджмента', 0): 34, ('Менеджмент - Высшая школа менеджмента', 1): 90,
          ('Менеджмент - Высшая школа финансов', 0): 11, ('Менеджмент - Высшая школа финансов', 1): 15,
          ('Менеджмент - Высшая школа экономики и бизнеса', 0): 34,
          ('Менеджмент - Высшая школа экономики и бизнеса', 1): 135,
          ('Менеджмент - Факультет бизнеса "КАПИТАНЫ"', 0): 15,
          ('Менеджмент - Факультет бизнеса "КАПИТАНЫ"', 1): 80,
          ('Перевод и переводоведение - Высшая школа социально-гуманитарных наук', 1): 130,
          ('Политология - Высшая школа социально-гуманитарных наук', 0): 7,
          ('Политология - Высшая школа социально-гуманитарных наук', 1): 30,
          ('Правовое обеспечение национальной безопасности - Высшая школа права', 1): 15,
          ('Прикладная информатика - Высшая школа кибертехнологий, математики и статистики', 0): 13,
          ('Прикладная информатика - Высшая школа кибертехнологий, математики и статистики', 1): 90,
          ('Прикладная математика и информатика - Высшая школа кибертехнологий, математики и статистики', 0): 7,
          ('Прикладная математика и информатика - Высшая школа кибертехнологий, математики и статистики', 1): 30,
          ('Психология - Высшая школа социально-гуманитарных наук', 0): 21,
          ('Психология - Высшая школа социально-гуманитарных наук', 1): 25,
          ('Реклама и связи с общественностью - Высшая школа экономики и бизнеса', 0): 7,
          ('Реклама и связи с общественностью - Высшая школа экономики и бизнеса', 1): 190,
          ('Сервис - Высшая инженерная школа "Новые материалы и технологии"', 1): 15,
          ('Сервис - Высшая инженерная школа "Новые материалы и технологии"', 0): 7,
          ('Социология - Высшая школа социально-гуманитарных наук', 1): 20,
          ('Статистика - Высшая школа кибертехнологий, математики и статистики', 1): 15,
          ('Статистика - Высшая школа кибертехнологий, математики и статистики', 0): 5,
          ('Таможенное дело - Высшая инженерная школа "Новые материалы и технологии"', 1): 115,
          ('Таможенное дело - Высшая инженерная школа "Новые материалы и технологии"', 0): 3,
          ('Таможенное дело - Высшая школа экономики и бизнеса', 1): 115,
          ('Таможенное дело - Высшая школа экономики и бизнеса', 0): 3,
          ('Технологические машины и оборудование - Высшая инженерная школа "Новые материалы и технологии"', 1): 15,
          ('Технологические машины и оборудование - Высшая инженерная школа "Новые материалы и технологии"', 0): 7,
          (
              'Технология продукции и организация общественного питания - Высшая инженерная школа "Новые материалы и технологии"',
              1
          ): 40,
          ('Товароведение - Высшая инженерная школа "Новые материалы и технологии"', 1): 30,
          ('Товароведение - Высшая инженерная школа "Новые материалы и технологии"', 0): 16,
          ('Торговое дело - Высшая школа экономики и бизнеса', 0): 15,
          ('Торговое дело - Высшая школа экономики и бизнеса', 1): 70, ('Туризм - Высшая школа менеджмента', 0): 14,
          ('Туризм - Высшая школа менеджмента', 1): 10,
          ('Управление персоналом - Высшая школа экономики и бизнеса', 0): 9,
          ('Управление персоналом - Высшая школа экономики и бизнеса', 1): 40,
          ('Экономика - Высшая инженерная школа "Новые материалы и технологии"', 1): 10,
          ('Экономика - Высшая инженерная школа "Новые материалы и технологии"', 0): 13,
          ('Экономика - Высшая школа кибертехнологий, математики и статистики', 0): 15,
          ('Экономика - Высшая школа кибертехнологий, математики и статистики', 1): 15,
          ('Экономика - Высшая школа финансов', 0): 25, ('Экономика - Высшая школа финансов', 1): 120,
          ('Экономика - Высшая школа экономики и бизнеса', 0): 25,
          ('Экономика - Высшая школа экономики и бизнеса', 1): 160,
          ('Экономика - Специальный факультет талантливой молодежи "Высшая школа "Форсайт""', 0): 13,
          ('Экономика - Специальный факультет талантливой молодежи "Высшая школа "Форсайт""', 1): 15,
          ('Экономическая безопасность - Высшая школа экономики и бизнеса', 0): 2,
          ('Экономическая безопасность - Высшая школа экономики и бизнеса', 1): 95,
          ('Юриспруденция - Высшая школа права', 1): 90}


async def rea_parser():
    async with aiohttp.ClientSession() as session:
        ranked_lists = []
        universities = []
        bvi_place = {}

        async def foo(url, tp=0):
            async with session.get(url) as rsp:
                page = BeautifulSoup(await rsp.text(), 'html.parser')

                direction = page.find('h1').text + ' - ' + page.find('h2').text
                if direction == 'Ошибка. - При обработке вашего запроса произошла ошибка.':
                    return

                pl = places[(direction, tp)]

                abits = page.find('tbody').find_all('tr')
                n = 1 if tp == 1 else bvi_place.setdefault((direction, tp), 1)

                for abit in abits:
                    abit = abit.find_all('td')

                    snils = abit[2].text.replace('-', '').replace(' ', '')
                    snils = ('Н' + snils) if len(snils) != 11 else ('С' + snils)
                    score = abit[4].text if abit[4].text.strip() else 0
                    bvi = 0
                    original = 1 if 'Да' in abit[-3].text else 0
                    priority = abit[3].text

                    ranked_lists.append(('РЭУ Плеханова', direction, tp, n, snils, score, bvi, original, priority))

                    n += 1

                universities.append(('РЭУ Плеханова', direction, tp, pl))

        async def bvi(url):
            async with session.get(url) as rsp:
                page = BeautifulSoup(await rsp.text(), 'html.parser')

                direction = page.find('h1').text + ' - ' + page.find('h2').text
                if direction == 'Ошибка. - При обработке вашего запроса произошла ошибка.':
                    return

                abits = page.find('tbody').find_all('tr')
                n = 1
                tp = 0

                for abit in abits:
                    abit = abit.find_all('td')

                    snils = abit[2].text.replace('-', '').replace(' ', '')
                    snils = ('Н' + snils) if len(snils) != 11 else ('С' + snils)
                    score = 0
                    bvi = 1
                    original = 1 if 'Да' in abit[-3].text else 0
                    priority = abit[3].text

                    ranked_lists.append(('РЭУ Плеханова', direction, tp, n, snils, score, bvi, original, priority))

                    n += 1

                bvi_place[(direction, tp)] = n

        async with session.get('https://abitlist.rea.ru/?type=bachelor') as resp:
            soup = BeautifulSoup(await resp.text(), 'html.parser').find('div', {'class', 'd-xl-none'}).find_all()

            url_ok = []
            url_bvi = []
            url_pl = []

            flag = False
            for direct in soup:
                if direct.text == 'Очная':
                    flag = True
                elif direct.text == 'Очно-заочная':
                    flag = False
                elif direct.text in ('Бакалавр', 'Специалист'):
                    continue
                elif flag and not direct.find('summary'):
                    th = direct.find('thead')

                    if th and 'Бюджет По конкурсу' in th.text:
                        url_ok.extend(['https://abitlist.rea.ru' + dr['href'] for dr in direct.find_all('a')])
                    elif th and 'Бюджет Без испытаний' in th.text:
                        url_bvi.extend(['https://abitlist.rea.ru' + dr['href'] for dr in direct.find_all('a')])
                    elif th and 'Внебюджет Граждане РФ' in th.text:
                        url_pl.extend(['https://abitlist.rea.ru' + dr['href'] for dr in direct.find_all('a')])

        tasks = []

        for url in url_bvi:
            tasks.append(asyncio.create_task(bvi(url)))

        for url in url_pl:
            tasks.append(asyncio.create_task(foo(url, 1)))

        await asyncio.gather(*tasks)

        tasks = []

        for url in url_ok:
            tasks.append(asyncio.create_task(foo(url)))

        await asyncio.gather(*tasks)

        return ranked_lists, universities


if __name__ == '__main__':
    loop = asyncio.new_event_loop()

    print(loop.run_until_complete(rea_parser()))
